<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.lnsf.controller" />
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 所有html页面不经过DispatcherServlet处理 -->
	 <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
	<!-- 会自动注册RequestMappingHandlerMapping、RequestMappingHandlerAdapter与ExceptionHandlerExceptionResolver三个bean。 -->
	 <mvc:default-servlet-handler/> 
	<!-- 静态资源处理  css js imgs -->
	    <mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
  <mvc:resources location="/images/" mapping="/images/**"></mvc:resources>
   <mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
    <mvc:resources location="/assets/" mapping="/assets/**"></mvc:resources>
	<!-- 访问拦截  -->
    <!--登录拦截，验证用户是否登录-->
 <!--    <mvc:interceptors>
        <mvc:interceptor>    
             <mvc:mapping path="/WEB-INF/view/**" />  
              <mvc:exclude-mapping path="/logOut"/>
             <mvc:exclude-mapping path="/index.html"/>
             <mvc:exclude-mapping path="index"/>
             <mvc:exclude-mapping path="/login"/>
             <mvc:exclude-mapping path="/register"/>
            <bean class="com.lnsf.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors> -->
    <!-- pjax视图拦截  -->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**/**.view"/>-->
            <!--<mvc:mapping path="/**/**.modal"/>-->
            <!--<bean class="com.demo.oldmountain.interceptor.PjaxHandlerInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->


    <!-- 国际化资源配置 -->
    <!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">-->
    <!--&lt;!&ndash; 国际化信息所在的文件名 &ndash;&gt;-->
    <!--<property name="basename" value="messages/message"/>-->
    <!--&lt;!&ndash; 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  &ndash;&gt;-->
    <!--<property name="useCodeAsDefaultMessage" value="true" />-->
    <!--</bean>-->
	<!--配置SessionLocaleResolver-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
	
    <!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".html" />
	</bean>
</beans>
